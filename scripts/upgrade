#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..."

# If users_status doesn't exist, create it
if [ -z "${users_status:-}" ]; then
	users_status="Editor"
	ynh_app_setting_set --app=$app --key=users_status --value=$users_status
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..."

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir"
fi

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading PHP-FPM configuration..."

# Create a dedicated PHP-FPM config
ynh_add_fpm_config

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# SETUP APPLICATION WITH CURL
#=================================================
ynh_script_progression --message="Setuping application with CURL..."

# Set right permissions for curl install
mkdir -p $install_dir/plugins/auto
chown -R $app:www-data "$install_dir"

# Set the app as temporarily public for curl call
ynh_script_progression --message="Configuring SSOwat..."

ynh_backup_if_checksum_is_different --file="$install_dir/config/connect.php"

mv $install_dir/config/connect.php $install_dir/config/connect.php.ynh_bkp

# Installation with curl
ynh_script_progression --message="Finalizing installation..."
ynh_local_curl "/ecrire/?suivant" "exec=install" "etape=chmod"
ynh_local_curl "/ecrire/?suivant" "exec=install" "etape=2" "chmod=750" "adresse_db=localhost" "login_db=$db_name" "pass_db=$db_pwd" "server_db=mysql"
ynh_local_curl "/ecrire/?suivant" "exec=install" "etape=3" "adresse_db=localhost" "login_db=$db_name" "pass_db=$db_pwd" "server_db=mysql" "choix_db=$db_name" "tprefix=$db_name"
# For now spip have a problem with LDAP
#ynh_local_curl "/ecrire/?suivant" "exec=install" "etape=ldap1"
#ynh_local_curl "/ecrire/?suivant" "exec=install" "etape=ldap2" "adresse_ldap=localhost" "port_ldap=389" "tls_ldap=no" "protocole_ldap=3"
#ynh_local_curl "/ecrire/?suivant" "exec=install" "etape=ldap3" "adresse_ldap=localhost" "port_ldap=389" "tls_ldap=no" "protocole_ldap=3"
#ynh_local_curl "/ecrire/?suivant" "exec=install" "etape=ldap4" "adresse_ldap=localhost" "port_ldap=389" "tls_ldap=no" "protocole_ldap=3" "base_ldap=dc=yunohost,dc=org"
#
## statut_ldap can take: 0minirezo for Administrator, 1comite for Editor, 6forum for Visitor
#if [ $users_status = "Administrator" ]; then
#	status="0minirezo"
#elif [ $users_status = "Editor" ]; then
#	status="1comite"
#else
#	status="6forum"
#fi
#ynh_local_curl "/ecrire/?suivant" "exec=install" "etape=ldap5" "adresse_ldap=localhost" "port_ldap=389" "tls_ldap=no" "protocole_ldap=3" "base_ldap=dc=yunohost,dc=org" "statut_ldap=$status" "ldap_login=sAMAccountName,uid,login,userid,cn,sn" "ldap_nom=cn" "ldap_email=mail" "ldap_bio=description"
#ynh_local_curl "/ecrire/?suivant" "exec=install" "etape=3" "ldap_present=true"

# Fix db initialization
ynh_local_curl "/ecrire/?exec=install" "etape=3b"

email=$(yunohost user info $admin | grep mail: | cut -d' ' -f2 | tr -d '\n')
ynh_local_curl "/ecrire/?suivant" "exec=install" "etape=3b" "adresse_db=localhost" "login_db=$db_name" "pass_db=$db_pwd" "server_db=mysql" "sel_db=$db_name" "nom=$admin" "email=$email" "login=$admin" "pass=$password" "pass_verif=$password"
ynh_local_curl "/ecrire/?suivant" "exec=install" "etape=fin"

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..."

#ynh_replace_string --match_string="'','utf8');" --replace_string="'ldap.php','utf8');" --target_file=$install_dir/config/connect.php
cp ../conf/mes_options.php $install_dir/config/mes_options.php

# Add security fix https://www.spip.net/en_article4201.html
cp ../conf/ecran_securite.php $install_dir/config/ecran_securite.php

if [ ! -f $install_dir/config/connect.php ]; then
	mv $install_dir/config/connect.php.ynh_bkp $install_dir/config/connect.php
else
#REMOVEME? 	ynh_secure_remove --file="$install_dir/config/connect.php.ynh_bkp"
fi

ynh_store_file_checksum --file="$install_dir/config/connect.php"

#=================================================
# SEND INFORMATION
#=================================================

echo "To finish the upgrade, you may have to update the database by clicking on the button (if asked) at this location: https://$domain$path/ecrire/" > mail_to_send

ynh_send_readme_to_admin --app_message="mail_to_send" --type="upgrade"

if [ $migration_process -eq 1 ]
then
    ynh_script_progression --message="Spip2 has been successfully migrated to Spip! \
A last scheduled operation will run in a couple of minutes to finish the \
migration in YunoHost side. Do not proceed any application operation while \
you don't see Spip as installed."

    # Execute a post migration script after the end of this upgrade.
    # Mainly for some cleaning
    script_post_migration=spip2_post_migration.sh
    cp ../conf/$script_post_migration /tmp
    ynh_replace_string --match_string="__OLD_APP__" --replace_string="$old_app" --target_file=/tmp/$script_post_migration
    ynh_replace_string --match_string="__NEW_APP__" --replace_string="$app" --target_file=/tmp/$script_post_migration
    chmod +x /tmp/$script_post_migration
    (cd /tmp; echo "/tmp/$script_post_migration > /tmp/$script_post_migration.log 2>&1" | at now + 2 minutes)
fi

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
